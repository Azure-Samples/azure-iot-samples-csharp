name: $(BuildID)_$(BuildDefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

resources:
  - repo: self
    clean: true

jobs:
  ### Linux build ###
  - job: LINUX
    displayName: Linux
    condition: succeeded()
    pool:
      vmImage: 'ubuntu-latest'
    timeoutInMinutes: 60
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core 5.0 SDK'
        inputs:
          version: 5.0.x
          performMultiLevelLookup: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: UseDotNet@2
        displayName: 'Use .NET Core 2.1 SDK'
        inputs:
          version: 2.1.x
          performMultiLevelLookup: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: UseDotNet@2
        displayName: 'Use .NET Core 3.1 SDK'
        inputs:
          version: 3.1.x
          performMultiLevelLookup: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: Docker@1
        displayName: 'Start TPM Simulator'
        inputs:
          containerregistrytype: 'Container Registry'
          command: 'Run an image'
          imageName: aziotbld/testtpm
          containerName: 'testtpm-instance'
          ports: |  
            127.0.0.1:2321:2321
            127.0.0.1:2322:2322
          restartPolicy: unlessStopped
      - powershell: ./build.ps1 -clean -configuration Release -build -run
        displayName: build and run
        env:
          IOTHUB_DEVICE_CONN_STRING: $(IOTHUB-DEVICE-CONN-STRING)
          IOTHUB_MODULE_CONN_STRING: $(IOTHUB-MODULE-CONN-STRING)
          PNP_TC_DEVICE_CONN_STRING: $(PNP-TC-DEVICE-CONN-STRING)
          PNP_THERMOSTAT_DEVICE_CONN_STRING: $(PNP-THERMOSTAT-DEVICE-CONN-STRING)
          IOTHUB_CONNECTION_STRING: $(IOTHUB-CONNECTION-STRING)
          IOTHUB_PFX_X509_THUMBPRINT: $(IOTHUB-PFX-X509-THUMBPRINT)
          DPS_IDSCOPE: $(DPS-IDSCOPE)
          PROVISIONING_CONNECTION_STRING: $(PROVISIONING-CONNECTION-STRING)
          PATH_TO_DEVICE_PREFIX_FOR_DELETION_FILE: $(PATH-TO-DEVICE-PREFIX-FOR-DELETION-FILE)
          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)

    ### Windows build ###
  - job: WINDOWS
    displayName: Windows
    # Since the samples run against the same Azure resources, CRUD operations will fight for the same resources. 
    # So, the builds have been serialized. Comment out the line below to run them in parallel.
    dependsOn: LINUX
    condition: succeeded()
    pool:
      vmImage: 'windows-latest'
    timeoutInMinutes: 60
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core 5.0 SDK'
        inputs:
          version: 5.0.x
          performMultiLevelLookup: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: UseDotNet@2
        displayName: 'Use .NET Core 2.1 SDK'
        inputs:
          version: 2.1.x
          performMultiLevelLookup: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: UseDotNet@2
        displayName: 'Use .NET Core 3.1 SDK'
        inputs:
          version: 3.1.x
          performMultiLevelLookup: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - powershell: ./build.ps1 -clean -configuration Release -run
        displayName: build and run
        env:
          IOTHUB_DEVICE_CONN_STRING: $(IOTHUB-DEVICE-CONN-STRING)
          IOTHUB_MODULE_CONN_STRING: $(IOTHUB-MODULE-CONN-STRING)
          PNP_TC_DEVICE_CONN_STRING: $(PNP-TC-DEVICE-CONN-STRING)
          PNP_THERMOSTAT_DEVICE_CONN_STRING: $(PNP-THERMOSTAT-DEVICE-CONN-STRING)
          IOTHUB_CONNECTION_STRING: $(IOTHUB-CONNECTION-STRING)
          IOTHUB_PFX_X509_THUMBPRINT: $(IOTHUB-PFX-X509-THUMBPRINT)
          DPS_IDSCOPE: $(DPS-IDSCOPE)
          PROVISIONING_CONNECTION_STRING: $(PROVISIONING-CONNECTION-STRING)
          PATH_TO_DEVICE_PREFIX_FOR_DELETION_FILE: $(PATH-TO-DEVICE-PREFIX-FOR-DELETION-FILE)
          STORAGE_ACCOUNT_CONNECTION_STRING: $(STORAGE-ACCOUNT-CONNECTION-STRING)